[{"C:\\React\\airmilesapp\\src\\index.js":"1","C:\\React\\airmilesapp\\src\\App.js":"2","C:\\React\\airmilesapp\\src\\reportWebVitals.js":"3","C:\\React\\airmilesapp\\src\\components\\posts-list.component.js":"4","C:\\React\\airmilesapp\\src\\services\\posts.service.js":"5","C:\\React\\airmilesapp\\src\\http-common.js":"6","C:\\React\\airmilesapp\\src\\services\\user.servce.js":"7"},{"size":548,"mtime":1611896513444,"results":"8","hashOfConfig":"9"},{"size":292,"mtime":1611896464545,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":8261,"mtime":1612148204430,"results":"12","hashOfConfig":"9"},{"size":504,"mtime":1612013758230,"results":"13","hashOfConfig":"9"},{"size":160,"mtime":1611895621002,"results":"14","hashOfConfig":"9"},{"size":166,"mtime":1612001607055,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"9m9e6r",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\React\\airmilesapp\\src\\index.js",["35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["36","37"],"C:\\React\\airmilesapp\\src\\App.js",["38"],"import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from \"react\";\nimport PostApp from './components/posts-list.component';\n\nclass App extends Component {\n  render() {\n    return (<div className=\"container\">\n    <PostApp />\n  </div>\n    )\n  }\n}\n\nexport default App;\n","C:\\React\\airmilesapp\\src\\reportWebVitals.js",[],"C:\\React\\airmilesapp\\src\\components\\posts-list.component.js",["39","40","41"],"import React, { Component } from 'react';\r\nimport PostDataService from \"../services/posts.service\";\r\nimport UserDataService from \"../services/user.servce\";\r\nimport Select from \"react-dropdown-select\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass postlistApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            users: [],\r\n            postText: \"\",\r\n            postreplyText: \"\",\r\n            postResponseText:\"\",\r\n            cityID: \"\",\r\n            userID:\"\",\r\n            lat:\"\",\r\n            lon:\"\",\r\n            temp:\"\"\r\n        };\r\n        this.refreshPosts = this.refreshPosts.bind(this)\r\n        this.refreshUsers = this.refreshUsers.bind(this)\r\n        this.savePost = this.savePost.bind(this)\r\n        this.onChangeuserID = this.onChangeuserID.bind(this);\r\n        this.onChangecityID = this.onChangecityID.bind(this);\r\n        this.onChangelat= this.onChangelat.bind(this);\r\n        this.onChangelon = this.onChangelon.bind(this);\r\n        this.onChangetemp = this.onChangetemp.bind(this);\r\n        this.onChangepostText = this.onChangepostText.bind(this);\r\n        this.onChangepostResponseText = this.onChangepostResponseText.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n\r\n      onChangepostResponseText(e) {\r\n        this.setState({\r\n            postResponseText: e.target.value\r\n        });\r\n      }\r\n\r\n    handlePostReply(postid) {\r\n       \r\n        var data = {\r\n            postID: postid,\r\n            postreplyText: this.state.postResponseText\r\n        };\r\n\r\n        this.setState({ error: '' });\r\n        PostDataService.createreply(data);\r\n        this.refreshPosts();\r\n        this.state.postResponseText=\"\";\r\n    }\r\n    \r\n      handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n      }\r\n\r\n    onChangeuserID(e) {\r\n        this.setState({\r\n            userID: e.target.value\r\n        });\r\n      }\r\n\r\n      onChangecityID(e) {\r\n        this.setState({\r\n            cityID: e.target.value\r\n        });\r\n      }\r\n      onChangelat(e) {\r\n        this.setState({\r\n            lat: e.target.value\r\n        });\r\n      }\r\n      onChangelon(e) {\r\n        this.setState({\r\n            lon: e.target.value\r\n        });\r\n      }\r\n      onChangetemp(e) {\r\n        this.setState({\r\n            temp: e.target.value\r\n        });\r\n      }\r\n\r\n      onChangepostText(e) {\r\n        this.setState({\r\n            postText: e.target.value\r\n        });\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.refreshPosts();\r\n        this.refreshUsers();\r\n    }\r\n\r\n    refreshPosts() {\r\n        PostDataService.getAll()\r\n            .then(\r\n                response => {\r\n                    console.log(response);\r\n                    this.setState({ posts: response.data });\r\n                }\r\n            )\r\n    }\r\n\r\n    \r\n    refreshUsers() {\r\n        UserDataService.getAll()\r\n            .then(\r\n                response => {\r\n                   // alert(response.userID);\r\n                    this.setState({ users: response.data });\r\n                }\r\n            )\r\n    }\r\n\r\n      savePost() {\r\n     \r\n        var data = {\r\n            postText: this.state.postText,\r\n            cityID: this.state.cityID,\r\n            parentPostID:null,\r\n            userID:this.state.userID\r\n        };\r\n\r\n        //alert(data.cityID);\r\n       \r\n\r\n        PostDataService.create(data)\r\n          .then(response => {\r\n            this.setState({\r\n              id: response.data.id,\r\n              postText: response.data.postText,\r\n              cityID: response.data.cityID,\r\n              userID: response.data.userID\r\n            });\r\n            console.log(response.data);\r\n            \r\n          })\r\n      }\r\n\r\n    render() {\r\n        return (\r\n             \r\n           \r\n              <div className=\"center\">\r\n                  <table className=\"center\">\r\n                      <tr><td><h1>Posts Application</h1></td></tr>\r\n               <div>  \r\n<form onSubmit={this.savePost}>\r\n<table class=\"centernew\">\r\n    <tr class=\"justpadding\"><td><label>\r\n        User: </label></td><td>\r\n    <select value={this.state.userID}\r\n                onChange={(e) => this.setState({userID: e.target.value})}>\r\n                    <option value=\"Choose User\">Choose User</option>\r\n         {this.state.users.map((user) => \r\n         <option key={user.username} value={user.username}> {user.username}</option>)}\r\n        </select>\r\n        \r\n        </td></tr>\r\n <tr><td>  <label>\r\n        cityID: </label>\r\n         \r\n        </td><td>\r\n        \r\n        <select value={this.state.cityID}\r\n                onChange={(e) => this.setState({cityID: e.target.value})}>\r\n                    <option value=\"Choose City\">Choose City</option>\r\n         <option key=\"Salisbury\" value=\"Salisbury\"> Salisbury</option>\r\n         <option key=\"Rossmoor\" value=\"Rossmoor\"> Rossmoor</option>\r\n         <option key=\"Shearwater\" value=\"Shearwater\"> Shearwater</option>\r\n         \r\n        </select>\r\n\r\n        </td></tr>\r\n    <tr><td> <label>\r\n        postText:   </label>\r\n          \r\n        </td><td><input type=\"text\" value={this.state.postText} onChange={this.onChangepostText} /></td></tr>\r\n    <tr><td>   <input type=\"submit\" value=\"Submit\" />\r\n     </td></tr>\r\n</table>\r\n</form>   \r\n  \r\n      \r\n\r\n  </div>         \r\n<h2>Here are the Posts!</h2>\r\n                     <div> <tr><td>\r\n                            {\r\n                                this.state.posts.map(\r\n                                    posts =><div class=\"postdiv\">\r\n                                       <table class=\"posttable\">\r\n                                           <tr key={posts.postID}>\r\n                                   <b> <td>Post\r\n                                              Created by : {posts.userID};\r\n                                            City : {posts.cityID} </td> </b>  \r\n                                        </tr>\r\n                                        <tr>\r\n                                         <i> <td> <b>Lat :</b> {posts.city.latitude} <b>;</b> \r\n                                         <b> Long :</b> {posts.city.longitude}<b>;</b> \r\n                                         <b> Temp :</b>  {posts.city.temp}<b>;</b> </td></i> \r\n                                        </tr>\r\n                                        <tr><td>Post Text : {posts.postText}</td></tr>\r\n                                        <tr>\r\n<td>\r\n<TextField\r\n        defaultValue={this.state.postResponseText}\r\n        onChange={event => {\r\n          const { value } = event.target;\r\n          this.setState({ postResponseText: value });\r\n        }}\r\n      />\r\n            <Button color=\"primary\" onClick={() => this.handlePostReply(posts.postID)}>Reply</Button></td>\r\n                                     \r\n                                        </tr><table>\r\n                                 \r\n                                                \r\n                                        {\r\n                                        posts.postReplies.map(\r\n                                            reply => <tr>\r\n                                                   <i> <td><b>Reply : </b>{reply.postreplyText}</td>\r\n                                                   </i>  </tr>\r\n                                        )\r\n                                        \r\n                                        } \r\n                                            </table>\r\n                                         </table></div>\r\n                                )\r\n                            }\r\n                       </td></tr>\r\n                       <tr><td></td></tr>\r\n                       <tr><td></td></tr>\r\n                       <tr><td></td></tr>\r\n                       </div>\r\n                  </table>\r\n                    <br></br>\r\n                    <br></br>\r\n                    \r\n                </div>\r\n        \r\n              \r\n              \r\n        )\r\n    }\r\n}\r\n\r\nexport default postlistApp","C:\\React\\airmilesapp\\src\\services\\posts.service.js",[],"C:\\React\\airmilesapp\\src\\http-common.js",[],["42","43"],"C:\\React\\airmilesapp\\src\\services\\user.servce.js",[],{"ruleId":"44","severity":1,"message":"45","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":23},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"44","severity":1,"message":"52","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":12},{"ruleId":"44","severity":1,"message":"53","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},{"ruleId":"44","severity":1,"message":"54","line":6,"column":8,"nodeType":"46","messageId":"47","endLine":6,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":59,"column":9,"nodeType":"57","endLine":59,"endColumn":19},{"ruleId":"48","replacedBy":"58"},{"ruleId":"50","replacedBy":"59"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'logo' is defined but never used.","'Select' is defined but never used.","'Typography' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["60"],["61"],"no-global-assign","no-unsafe-negation"]